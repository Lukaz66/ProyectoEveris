package com.everis.controllers;

import static org.junit.Assert.*;
import static org.mockito.BDDMockito.given;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.content;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.mock.web.MockRequestDispatcher;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultMatcher;

import com.everis.models.Student;
import com.everis.services.IStudentService;

@RunWith(SpringRunner.class)
@WebMvcTest(StudentController.class)
public class StudentControllerTest {

  @Autowired
  private MockMvc mokMvc;

  @MockBean
  IStudentService studentService;
  
  @Test
  public void testGet() throws Exception{
    List<Student> list = new ArrayList<>();
    given(studentService.findAll()).willReturn(list);
    this.mokMvc.perform(get("/api/V1.0/students"))
      .andExpect(status().isOk())
      .andExpect( content().json("[]"));
  }

  @Test
  public void testSave() throws Exception {

    this.mokMvc.perform(post("/api/V1.0/students")
        .content(asJsonString))
    //    studentService.save(new Student());
//    
//    this.mokMvc.perform(post("/api/V1.0/students"))
//      .conte
  }

  @Test
  public void testUpdate() {
    fail("Not yet implemented");
  }

  @Test
  public void testDelete() {
    fail("Not yet implemented");
  }

}
